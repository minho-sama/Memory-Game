{"version":3,"sources":["components/Gameboard/Card.js","components/Gameboard/GameBoard.js","components/Header/ScoreBoard/ScoreBoard.js","components/Header/Header.js","charData.js","components/GameOver/GameOver.js","App.js","reportWebVitals.js","index.js"],"names":["Card","img","name","id","playRound","className","onClick","src","alt","GameBoard","characterArr","map","char","text","ScoreBoard","scoreProps","score","record","Header","props","href","size","charData","GameOver","setIsGameOver","setScore","clickedCharArr","App","useState","localStorage","getItem","setRecord","length","setItem","checkRecord","newRecord","useEffect","setCharacterArr","setClickedCharArr","isGameOver","shuffle","array","i","j","Math","floor","random","gameOver","includes","prevScore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.903e4790.chunk.js","sourcesContent":["import React from 'react'\n\nexport function Card({img, name, id, playRound}) {\n    return (\n        <div className = \"charCard\" \n            onClick = {() => {\n                playRound(id)\n            }}>\n            <img src = {img} alt = {name}/>\n            <h3>{name}</h3>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react';\nimport './gameBoard.css'\nimport Card from './Card'\n\nexport function GameBoard({characterArr, playRound}) {\n    return (\n        <div className = 'gameBoard'>\n            {\n              characterArr.map((char) => {\n                return <Card key = {char.id}img = {char.img} name = {char.text} id = {char.id} playRound = {playRound}/>\n              })\n            }\n        </div>\n    )\n}\n\nexport default GameBoard\n","export function ScoreBoard({scoreProps}) {\n    const {score, record} = scoreProps;\n    return (\n        <div className = 'scoreBoard'>\n            <p>Your record: <span>{record}</span></p>\n            <p>Current Score: <span>{score}</span></p>\n        </div>\n    )\n}\n\nexport default ScoreBoard\n","import {DiGithubBadge} from 'react-icons/di'\nimport {FaRing} from 'react-icons/fa'\nimport './header.css'\nimport ScoreBoard from './ScoreBoard/ScoreBoard'\n\nexport function Header(props) {\n    return (\n        <header>\n            <div className = 'title-container'>\n                <h2>Lord of the Rings Memory Game</h2>\n                <FaRing className = \"ring-icon\"/>\n            </div>\n            <ScoreBoard scoreProps = {props}/>\n            <a href = \"https://github.com/minho-sama/Memory-Game\">minh 2021<DiGithubBadge size = '16px'/></a>\n        </header>\n    )\n}\nexport default Header","export const charData = [\n    {\n      id: 1,\n      img:\n        \"https://static1.srcdn.com/wordpress/wp-content/uploads/2020/01/Elijah-Wood-as-Frodo-Baggins-e1550351480815.v1.cropped.jpg?q=50&fit=crop&w=740&h=389\",\n      text: \"Frodo\",\n    },\n    {\n      id: 2,\n      img:\n        \"https://static1.srcdn.com/wordpress/wp-content/uploads/2016/08/Samwise-Gamgee-Hobbit.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Sam\",\n    },\n    {\n      id: 3,\n      img:\n        \"https://static3.srcdn.com/wordpress/wp-content/uploads/2020/02/Merry-Cropped.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Marry\",\n    },\n    {\n      id: 4,\n      img:\n        \"https://static0.srcdn.com/wordpress/wp-content/uploads/2017/04/Pippin-in-Fellowship-Of-The-Ring.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Pippin\",\n    },\n    {\n      id: 5,\n      img:\n        \"https://static2.srcdn.com/wordpress/wp-content/uploads/2020/01/Gandalf-LOTR-Video-Games.jpeg?q=50&fit=crop&w=740&h=370\",\n      text: \"Gandalf\",\n    },\n    {\n      id: 6,\n      img:\n        \"https://static1.srcdn.com/wordpress/wp-content/uploads/2019/08/Aragorn-LOTR.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Aragorn\",\n    },\n    {\n      id: 7,\n      img:\n        \"https://static0.srcdn.com/wordpress/wp-content/uploads/2017/03/Gimli-is-a-Joke.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Gimli\",\n    },\n    {\n      id: 8,\n      img:\n        \"https://static2.srcdn.com/wordpress/wp-content/uploads/2019/04/Orlando-Bloom-as-Legolas-Greenleaf-The-Lord-of-the-Rings.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Legolas\",\n    },\n    {\n      id: 9,\n      img:\n        \"https://static2.srcdn.com/wordpress/wp-content/uploads/2017/07/The-Eye-of-Sauron-from-The-Lord-of-the-Rings.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Sauron\",\n    },\n    {\n      id: 10,\n      img:\n        \"https://static2.srcdn.com/wordpress/wp-content/uploads/2020/05/Gollum-Smeagol-.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Sm√©agol\",\n    },\n    {\n      id: 11,\n      img:\n        \"https://static3.srcdn.com/wordpress/wp-content/uploads/2020/06/Sean-Bean-Lord-of-the-Rings-Boromir-Mordor-meme.jpg?q=50&fit=crop&w=960&h=500\",\n      text: \"Boromir\",\n    },\n    {\n      id: 12,\n      img:\n        \"https://static2.srcdn.com/wordpress/wp-content/uploads/2020/04/Saruman-We-Must-Join-With-Him-Quote.jpg?q=50&fit=crop&w=740&h=370\",\n      text: \"Saruman\",\n    },\n  ];","import React from 'react'\nimport './GameOver.css'\n\nfunction GameOver({setIsGameOver, score, setScore, clickedCharArr}) {\n    return (\n        <div className = 'gameOver-box'>\n            <h1>Your journey to Mordor ends here</h1>\n            <p>You scored {score} points!</p>\n            <button onClick = {() => {\n                setScore(0);\n                setIsGameOver(false);\n            }}>Play Again</button>\n        </div>\n    )\n}\n\nexport default GameOver\n","import {useState, useEffect} from 'react';\nimport GameBoard from './components/Gameboard/GameBoard';\nimport Header from './components/Header/Header';\nimport {charData} from './charData';\nimport GameOver from './components/GameOver/GameOver'\n\n\nfunction App() {\n  //score\n  const [score, setScore] = useState(0);\n  const [record, setRecord] = useState(localStorage.getItem('record'));\n  \n  //initial record setup\n  if(localStorage.length === 0){\n    localStorage.setItem('record', 0)\n  }\n\n  const setNewRecord = (newRecord) => {\n    localStorage.setItem('record', newRecord)\n    setRecord(localStorage.getItem('record'))\n  }\n\n  const checkRecord = () => {\n    if (score >= record){\n      setNewRecord(score)\n    }\n  }\n\n  useEffect(() => {\n    checkRecord()\n  }, [score])\n\n  //game\n  const [characterArr, setCharacterArr] = useState([]);\n  const [clickedCharArr, setClickedCharArr] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  useEffect(() => {\n    shuffle(charData)\n    setCharacterArr(charData)\n  }, []);\n\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i >= 0; i--){\n      let j = Math.floor(Math.random() * array.length);\n      // let temp = array[i];\n      // array[i] = array[j];\n      // array[j] = temp;\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  const playRound = (id) => {\n    setClickedCharArr([...clickedCharArr, id])\n    const isAlreadyClicked = clickedCharArr.includes(id)\n\n    if(isAlreadyClicked) {\n      gameOver()\n    }\n    else if(clickedCharArr.length === 11){\n      setScore((prevScore) => prevScore + 1)\n      gameOver()\n    }\n    else{\n      setScore((prevScore) => prevScore + 1);\n      shuffle(charData)\n    }\n  }\n\n  const gameOver = () => {\n    setClickedCharArr([])\n    setIsGameOver(true)\n    shuffle(charData)\n    setCharacterArr(charData)\n  }\n\n  return (\n    <>\n    <Header score = {score} record = {record}/>\n    {isGameOver ? <GameOver setIsGameOver = {setIsGameOver} score = {score} setScore = {setScore} clickedCharArr = {clickedCharArr}/> :\n    <GameBoard characterArr = {characterArr} playRound = {playRound} isGameOver = {isGameOver}/>\n    }\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}